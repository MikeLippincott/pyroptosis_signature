# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# OS-specific files
.DS_Store

# ignore datasets as an individual would be downloading from a platform in the future
Plate_1_data/0.wave1_data/0.download_data/70117_20230118MM1_AbTest_V2__2023-01-25T16_44_54-Measurement1
Plate_1_data/1.wave2_data/0.download_data/70117_20230118MM1_AbTest_ASC__2023-01-27T13_47_00-Measurement1
Plate_1_data/2.wave3_data/0.download_data/70117_20230118MM1_CellPainting_A700_20X_V1__2023-02-06T09_42_13-Measurement1
Plate_2_data/0.download_data/70117_20230210MM1_Gasdermin514_CP_BC430856__2023-03-22T15_42_38-Measurement1

# ignore 6.6GB SQLite file as it can not be added to GitHub for Interstellar Wave 3
interstellar_wave3.sqlite

# ignore large csv.gz for the Interstellar Wave 3 data
interstellar_wave3_sc.csv.gz
interstellar_wave3_sc_norm_cellprofiler.csv.gz
interstellar_wave3_sc_norm_fs_cellprofiler.csv.gz

# ignore logs 
logs

# ignore testing notebooks as these will not be used in the reproducible runs
Plate_2_data/3.cellprofiler_analysis/split_loaddata_by_row.ipynb

# ignore SQLite files from PLate 2 runs as they are way over the limit to add to GitHub (all analysis_output will be too large with this dataset)
Plate_2_data/3.cellprofiler_analysis/analysis_output

# ignore LoadData files used due to power interruption 
Plate_2_data/3.cellprofiler_analysis/loaddata_by_celltype/SHSY5Y_cells_already_ran_illum.csv
Plate_2_data/3.cellprofiler_analysis/loaddata_by_celltype/SHSY5Y_cells_need_to_be_run_illum.csv

# ignore folder with parquet files as they are too large and will be generated from run
Plate_2_data/4.processing_features/data
